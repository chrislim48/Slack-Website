{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlim/Downloads/CSE183_Assignments/assignment-8/frontend/src/App.js\";\nimport React from 'react'; // import Emoji from './Emoji';\n\nimport Login from './Login';\n/**\n * Simple component with no state.\n *\n * @param {function} setDummy set the dummy state\n */\n// function getDummy(setDummy) {\n//   fetch('http://localhost:3010/v0/dummy')\n//     .then((response) => {\n//       if (!response.ok) {\n//         throw response;\n//       }\n//       return response.json();\n//     })\n//     .then((json) => {\n//       setDummy(json.message);\n//     })\n//     .catch((error) => {\n//       setDummy(error.toString());\n//     });\n// }\n\n/**\n * Simple component with no state.\n *\n * @return {object} JSX\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  // const [dummy, setDummy] = React.useState('Click the button!');\n  // const [emoji, setEmoji] = React.useState(false);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/christopherlim/Downloads/CSE183_Assignments/assignment-8/frontend/src/App.js"],"names":["React","Login","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;AACA,SAASC,GAAT,GAAe;AACb;AACA;AACA,sBACE,QAAC,aAAD;AAAA,2BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KARQA,G;AAUT,eAAeA,GAAf","sourcesContent":["import React from 'react';\n\n// import Emoji from './Emoji';\nimport Login from './Login';\n\n/**\n * Simple component with no state.\n *\n * @param {function} setDummy set the dummy state\n */\n// function getDummy(setDummy) {\n//   fetch('http://localhost:3010/v0/dummy')\n//     .then((response) => {\n//       if (!response.ok) {\n//         throw response;\n//       }\n//       return response.json();\n//     })\n//     .then((json) => {\n//       setDummy(json.message);\n//     })\n//     .catch((error) => {\n//       setDummy(error.toString());\n//     });\n// }\n\n/**\n * Simple component with no state.\n *\n * @return {object} JSX\n */\nfunction App() {\n  // const [dummy, setDummy] = React.useState('Click the button!');\n  // const [emoji, setEmoji] = React.useState(false);\n  return (\n    <BrowserRouter>\n      <Login/>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
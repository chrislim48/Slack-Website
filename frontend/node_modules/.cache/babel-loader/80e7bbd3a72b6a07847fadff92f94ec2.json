{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlim/Downloads/CSE183_Assignments/assignment-8/frontend/src/Homepage/ChannelFeed.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; // import clsx from 'clsx';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer'; // import AppBar from '@material-ui/core/AppBar';\n// import Toolbar from '@material-ui/core/Toolbar';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { WorkspaceContext } from '../Homepage';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  title: {\n    flexGrow: 1,\n    fontSize: `20px`,\n    height: 40,\n    fontFamily: 'Verdana',\n    color: 'white'\n  },\n  drawer: {\n    width: `100%`,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: `100%`\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingTop: 0,\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-start',\n    background: `#4A154B`\n  },\n  icons: {\n    color: 'white'\n  }\n}));\n/**\n * @return {object} JSX\n */\n\nfunction ChannelFeed() {\n  _s();\n\n  const {\n    value3,\n    value4\n  } = React.useContext(WorkspaceContext);\n  const [messageDrawerOpen, setMessageDrawerOpen] = value3;\n  const [channelObj] = value4;\n  const classes = useStyles();\n\n  const handleDrawerClose = () => {\n    setMessageDrawerOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      className: classes.drawer,\n      variant: \"persistent\",\n      anchor: \"right\",\n      open: messageDrawerOpen,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.drawerHeader,\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleDrawerClose,\n          children: /*#__PURE__*/_jsxDEV(KeyboardArrowLeftIcon, {\n            className: classes.icons\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.title,\n          children: channelObj.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: ['Inbox', 'Starred'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 36\n            }, this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, text, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: ['All mail'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 36\n            }, this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)]\n        }, text, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChannelFeed, \"DaAoBrDt0Q1Cn34R8zL77qOsw/k=\", false, function () {\n  return [useStyles];\n});\n\n_c = ChannelFeed;\nexport default ChannelFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChannelFeed\");","map":{"version":3,"sources":["/Users/christopherlim/Downloads/CSE183_Assignments/assignment-8/frontend/src/Homepage/ChannelFeed.js"],"names":["React","makeStyles","Drawer","CssBaseline","List","Typography","Divider","IconButton","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","WorkspaceContext","KeyboardArrowLeftIcon","useHistory","useStyles","theme","root","display","title","flexGrow","fontSize","height","fontFamily","color","drawer","width","flexShrink","drawerPaper","drawerHeader","alignItems","paddingTop","mixins","toolbar","justifyContent","background","icons","ChannelFeed","value3","value4","useContext","messageDrawerOpen","setMessageDrawerOpen","channelObj","classes","handleDrawerClose","paper","name","map","text","index"],"mappings":"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","sourcesContent":["import React from 'react';\n// import clsx from 'clsx';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\n// import AppBar from '@material-ui/core/AppBar';\n// import Toolbar from '@material-ui/core/Toolbar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport {WorkspaceContext} from '../Homepage';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport {useHistory} from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  title: {\n    flexGrow: 1,\n    fontSize: `20px`,\n    height: 40,\n    fontFamily: 'Verdana',\n    color: 'white',\n  },\n  drawer: {\n    width: `100%`,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: `100%`,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingTop: 0,\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-start',\n    background: `#4A154B`,\n  },\n  icons: {\n    color: 'white',\n  },\n}));\n\n/**\n * @return {object} JSX\n */\nfunction ChannelFeed() {\n  const {value3, value4} = React.useContext(WorkspaceContext);\n  const [messageDrawerOpen, setMessageDrawerOpen] = value3;\n  const [channelObj] = value4;\n  const classes = useStyles();\n\n  const handleDrawerClose = () => {\n    setMessageDrawerOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"right\"\n        open={messageDrawerOpen}\n        classes={{\n          paper: classes.drawerPaper,\n        }}>\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            <KeyboardArrowLeftIcon className={classes.icons}/>\n          </IconButton>\n          <Typography className={classes.title}>\n            {channelObj.name}\n          </Typography>\n        </div>\n        <Divider />\n        <List>\n          {['Inbox', 'Starred'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {['All mail'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    </div>\n  );\n}\n\nexport default ChannelFeed;\n"]},"metadata":{},"sourceType":"module"}
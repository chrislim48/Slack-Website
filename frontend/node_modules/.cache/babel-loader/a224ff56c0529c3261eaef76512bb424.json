{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlim/Downloads/CSE183_Assignments/assignment-8/frontend/src/Homepage/ChannelFeed.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport { WorkspaceContext } from '../Homepage';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  posting: {\n    width: '100%',\n    maxWidth: '36ch',\n    backgroundColor: theme.palette.background.paper\n  },\n  inline: {\n    display: 'inline'\n  },\n  title: {\n    flexGrow: 1,\n    fontSize: `20px`,\n    height: 40,\n    fontFamily: 'Verdana',\n    color: 'white'\n  },\n  drawer: {\n    width: `100%`,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: `100%`\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingTop: 0,\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-start',\n    background: `#4A154B`\n  },\n  icons: {\n    color: 'white'\n  }\n}));\n/**\n * @return {object} JSX\n */\n\nfunction ChannelFeed() {\n  _s();\n\n  const {\n    value3,\n    value4\n  } = React.useContext(WorkspaceContext);\n  const [messageDrawerOpen, setMessageDrawerOpen] = value3;\n  const [channelObj] = value4; // name, id.\n\n  const classes = useStyles();\n\n  const handleDrawerClose = () => {\n    setMessageDrawerOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      className: classes.drawer,\n      variant: \"persistent\",\n      anchor: \"right\",\n      open: messageDrawerOpen,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.drawerHeader,\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleDrawerClose,\n          children: /*#__PURE__*/_jsxDEV(KeyboardArrowLeftIcon, {\n            className: classes.icons\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.title,\n          children: channelObj.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AlignItemsList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n/**\n * @return {object} JSX\n */\n\n\n_s(ChannelFeed, \"DaAoBrDt0Q1Cn34R8zL77qOsw/k=\", false, function () {\n  return [useStyles];\n});\n\n_c = ChannelFeed;\n\nfunction AlignItemsList() {\n  _s2();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(List, {\n    className: classes.posting,\n    children: [/*#__PURE__*/_jsxDEV(ListItem, {\n      alignItems: \"flex-start\",\n      children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          alt: \"Remy Sharp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"span\",\n            variant: \"body2\",\n            className: classes.inline,\n            color: \"textPrimary\",\n            children: \"Ali Connors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), '11:30']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this),\n        secondary: \" \\u2014 I'll be in your neighborhood doing errands this\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      variant: \"inset\",\n      component: \"li\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(AlignItemsList, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = AlignItemsList;\nexport default ChannelFeed;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChannelFeed\");\n$RefreshReg$(_c2, \"AlignItemsList\");","map":{"version":3,"sources":["/Users/christopherlim/Downloads/CSE183_Assignments/assignment-8/frontend/src/Homepage/ChannelFeed.js"],"names":["React","makeStyles","Drawer","CssBaseline","List","Typography","Divider","IconButton","ListItem","ListItemText","ListItemAvatar","Avatar","WorkspaceContext","KeyboardArrowLeftIcon","useStyles","theme","root","display","posting","width","maxWidth","backgroundColor","palette","background","paper","inline","title","flexGrow","fontSize","height","fontFamily","color","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","paddingTop","mixins","toolbar","justifyContent","icons","ChannelFeed","value3","value4","useContext","messageDrawerOpen","setMessageDrawerOpen","channelObj","classes","handleDrawerClose","name","AlignItemsList"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport {WorkspaceContext} from '../Homepage';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  posting: {\n    width: '100%',\n    maxWidth: '36ch',\n    backgroundColor: theme.palette.background.paper,\n  },\n  inline: {\n    display: 'inline',\n  },\n  title: {\n    flexGrow: 1,\n    fontSize: `20px`,\n    height: 40,\n    fontFamily: 'Verdana',\n    color: 'white',\n  },\n  drawer: {\n    width: `100%`,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: `100%`,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingTop: 0,\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-start',\n    background: `#4A154B`,\n  },\n  icons: {\n    color: 'white',\n  },\n}));\n\n/**\n * @return {object} JSX\n */\nfunction ChannelFeed() {\n  const {value3, value4} = React.useContext(WorkspaceContext);\n  const [messageDrawerOpen, setMessageDrawerOpen] = value3;\n  const [channelObj] = value4; // name, id.\n  const classes = useStyles();\n\n  const handleDrawerClose = () => {\n    setMessageDrawerOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"right\"\n        open={messageDrawerOpen}\n        classes={{\n          paper: classes.drawerPaper,\n        }}>\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            <KeyboardArrowLeftIcon className={classes.icons}/>\n          </IconButton>\n          <Typography className={classes.title}>\n            {channelObj.name}\n          </Typography>\n        </div>\n        <Divider />\n        <Divider />\n        <AlignItemsList/>\n      </Drawer>\n    </div>\n  );\n}\n\n/**\n * @return {object} JSX\n */\nfunction AlignItemsList() {\n  const classes = useStyles();\n\n  return (\n    <List className={classes.posting}>\n      <ListItem alignItems=\"flex-start\">\n        <ListItemAvatar>\n          <Avatar alt=\"Remy Sharp\"/>\n        </ListItemAvatar>\n        <ListItemText\n          primary={\n            <React.Fragment>\n              <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >Ali Connors</Typography>\n              {'11:30'}\n            </React.Fragment>\n          }\n          secondary=\" — I'll be in your neighborhood doing errands this…\"\n        />\n      </ListItem>\n      <Divider variant=\"inset\" component=\"li\" />\n    </List>\n  );\n}\n\nexport default ChannelFeed;\n"]},"metadata":{},"sourceType":"module"}
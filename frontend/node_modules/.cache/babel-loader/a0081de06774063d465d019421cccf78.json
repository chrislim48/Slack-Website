{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlim/Downloads/CSE183_Assignments/assignment-8/frontend/src/MenuAppBar.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport ArrowDropDownCircleIcon from '@material-ui/icons/ArrowDropDownCircle';\n/**\n * @return {*}\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MenuAppBar() {\n  _s();\n\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const {\n    value,\n    value2\n  } = React.useContext(WorkspaceContext);\n  const [workspaceList, setWorkspaceList] = value;\n  const [workspace, setWorkspace] = value2;\n  React.useEffect(() => {\n    fetchWorkspace(setWorkspaceList, setWorkspace);\n  }, [setWorkspaceList, setWorkspace]);\n\n  const handleMenu = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const setNewWorkspace = name => {\n    setWorkspace(name);\n    setAnchorEl(null);\n  };\n\n  const workspaceMenu = () => {\n    const arr = [];\n\n    for (let i = 0; i < workspaceList.length; i++) {\n      const name = workspaceList[i]['name'];\n\n      const jsx = /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => setNewWorkspace(name),\n        children: name\n      }, name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this);\n\n      arr.push(jsx);\n    }\n\n    return arr;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AppBar, {\n      className: classes.appBar,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.toolbar,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          className: classes.title,\n          noWrap: true,\n          children: workspace\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ArrowDropDownCircleIcon, {\n          className: classes.menuButton,\n          onClick: handleMenu,\n          children: /*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          anchorEl: anchorEl,\n          keepMounted: true,\n          open: Boolean(anchorEl),\n          onClose: handleClose,\n          children: workspaceMenu()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 7\n  }, this);\n}\n\n_s(MenuAppBar, \"bFu6ya4jdOe/gbpEke/r417YD4U=\", true);\n\n_c = MenuAppBar;\nexport default MenuAppBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuAppBar\");","map":{"version":3,"sources":["/Users/christopherlim/Downloads/CSE183_Assignments/assignment-8/frontend/src/MenuAppBar.js"],"names":["React","AppBar","Toolbar","Typography","AccountCircle","MenuItem","Menu","ArrowDropDownCircleIcon","MenuAppBar","classes","useStyles","anchorEl","setAnchorEl","useState","value","value2","useContext","WorkspaceContext","workspaceList","setWorkspaceList","workspace","setWorkspace","useEffect","fetchWorkspace","handleMenu","event","currentTarget","handleClose","setNewWorkspace","name","workspaceMenu","arr","i","length","jsx","push","appBar","toolbar","title","menuButton","Boolean"],"mappings":"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","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport ArrowDropDownCircleIcon from '@material-ui/icons/ArrowDropDownCircle';\n\n/**\n * @return {*}\n */\n function MenuAppBar() {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n  \n    const {value, value2} = React.useContext(WorkspaceContext);\n    const [workspaceList, setWorkspaceList] = value;\n    const [workspace, setWorkspace] = value2;\n  \n    React.useEffect(() => {\n      fetchWorkspace(setWorkspaceList, setWorkspace);\n    }, [setWorkspaceList, setWorkspace]);\n  \n    const handleMenu = (event) => {\n      setAnchorEl(event.currentTarget);\n    };\n  \n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n  \n    const setNewWorkspace = (name) => {\n      setWorkspace(name);\n      setAnchorEl(null);\n    };\n  \n    const workspaceMenu = () => {\n      const arr = [];\n      for (let i = 0; i < workspaceList.length; i++) {\n        const name = workspaceList[i]['name'];\n        const jsx =\n          <MenuItem\n            key={name}\n            onClick={() => setNewWorkspace(name)}\n          >\n            {name}\n          </MenuItem>;\n        arr.push(jsx);\n      }\n      return arr;\n    };\n  \n    return (\n      <div>\n        <AppBar\n          className={classes.appBar}\n        >\n          <Toolbar className={classes.toolbar}>\n            <Typography variant=\"h6\" className={classes.title} noWrap>\n              {workspace}\n            </Typography>\n            <ArrowDropDownCircleIcon\n              className={classes.menuButton}\n              onClick={handleMenu}\n            >\n              <AccountCircle/>\n            </ArrowDropDownCircleIcon>\n            <Menu\n              anchorEl={anchorEl}\n              keepMounted\n              open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              {workspaceMenu()}\n            </Menu>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n\nexport default MenuAppBar;"]},"metadata":{},"sourceType":"module"}
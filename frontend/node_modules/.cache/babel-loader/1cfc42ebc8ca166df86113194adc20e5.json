{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlim/Downloads/CSE183_Assignments/assignment-8/frontend/src/Homepage/ChannelFeed.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport { WorkspaceContext } from '../Homepage';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft'; // import SendText from './SendText';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  posting: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  inline: {\n    display: 'inline'\n  },\n  title: {\n    flexGrow: 1,\n    fontSize: `20px`,\n    height: 40,\n    fontFamily: 'Verdana',\n    color: 'white'\n  },\n  drawer: {\n    width: `100%`,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: `100%`\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingTop: 0,\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-start',\n    background: `#4A154B`\n  },\n  icons: {\n    color: 'white'\n  }\n}));\n\nconst fetchChannelFeed = (setChannelFeed, chID) => {\n  const item = localStorage.getItem('user');\n\n  if (!item) {\n    return;\n  }\n\n  const user = JSON.parse(item);\n  const bearerToken = user ? user.accessToken : '';\n\n  if (chID === '') {\n    return;\n  }\n\n  fetch(`/v0/message/${chID}`, {\n    method: 'get',\n    headers: new Headers({\n      'Authorization': `Bearer ${bearerToken}`,\n      'Content-Type': 'application/x-www-form-urlencoded'\n    })\n  }).then(response => {\n    if (!response.ok) {\n      throw response;\n    }\n\n    return response.json();\n  }).then(arr => {\n    setChannelFeed(arr);\n  }).catch(error => {\n    console.log(error);\n    setChannelFeed([]);\n  });\n};\n/**\n * @return {object} JSX\n */\n\n\nfunction ChannelFeed() {\n  _s();\n\n  const classes = useStyles();\n  const {\n    value3,\n    value4\n  } = React.useContext(WorkspaceContext);\n  const [messageDrawerOpen, setMessageDrawerOpen] = value3;\n  const [channelObj] = value4; // name, id.\n\n  const [channelFeed, setChannelFeed] = React.useState([]);\n\n  const handleDrawerClose = () => {\n    setMessageDrawerOpen(false);\n  };\n\n  const chID = channelObj.id;\n  console.log('chID: ', chID);\n  React.useEffect(() => {\n    fetchChannelFeed(setChannelFeed, chID);\n  }, [chID]);\n  console.log('channelFeed: ', channelFeed);\n\n  const ChannelMessages = () => {\n    const arr = [];\n\n    for (let i = 0; i < channelFeed.length; i++) {\n      const name = channelFeed[i]['name'];\n      const date = channelFeed[i]['date'];\n      const content = channelFeed[i]['content'];\n      const id = channelFeed[i]['id'];\n\n      const jsx = /*#__PURE__*/_jsxDEV(ListItem, {\n        alignItems: \"flex-start\",\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            alt: \"Remy Sharp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              component: \"span\",\n              variant: \"body2\",\n              className: classes.inline,\n              color: \"textPrimary\",\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this), \"\\xA0\\xA0\", date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this),\n          secondary: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this);\n\n      arr.push(jsx);\n    }\n\n    return /*#__PURE__*/_jsxDEV(List, {\n      className: classes.posting,\n      children: [arr, /*#__PURE__*/_jsxDEV(Divider, {\n        variant: \"inset\",\n        component: \"li\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      className: classes.drawer,\n      variant: \"persistent\",\n      anchor: \"right\",\n      open: messageDrawerOpen,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.drawerHeader,\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleDrawerClose,\n          children: /*#__PURE__*/_jsxDEV(KeyboardArrowLeftIcon, {\n            className: classes.icons\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.title,\n          children: channelObj.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChannelMessages, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChannelFeed, \"+QGpcUTQ7Ry+c9iXHE6Fp/vR+os=\", false, function () {\n  return [useStyles];\n});\n\n_c = ChannelFeed;\nexport default ChannelFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChannelFeed\");","map":{"version":3,"sources":["/Users/christopherlim/Downloads/CSE183_Assignments/assignment-8/frontend/src/Homepage/ChannelFeed.js"],"names":["React","makeStyles","Drawer","CssBaseline","List","Typography","Divider","IconButton","ListItem","ListItemText","ListItemAvatar","Avatar","WorkspaceContext","KeyboardArrowLeftIcon","useStyles","theme","root","display","posting","width","backgroundColor","palette","background","paper","inline","title","flexGrow","fontSize","height","fontFamily","color","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","paddingTop","mixins","toolbar","justifyContent","icons","fetchChannelFeed","setChannelFeed","chID","item","localStorage","getItem","user","JSON","parse","bearerToken","accessToken","fetch","method","headers","Headers","then","response","ok","json","arr","catch","error","console","log","ChannelFeed","classes","value3","value4","useContext","messageDrawerOpen","setMessageDrawerOpen","channelObj","channelFeed","useState","handleDrawerClose","id","useEffect","ChannelMessages","i","length","name","date","content","jsx","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport {WorkspaceContext} from '../Homepage';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\n\n// import SendText from './SendText';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  posting: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n  inline: {\n    display: 'inline',\n  },\n  title: {\n    flexGrow: 1,\n    fontSize: `20px`,\n    height: 40,\n    fontFamily: 'Verdana',\n    color: 'white',\n  },\n  drawer: {\n    width: `100%`,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: `100%`,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingTop: 0,\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-start',\n    background: `#4A154B`,\n  },\n  icons: {\n    color: 'white',\n  },\n}));\n\nconst fetchChannelFeed = (setChannelFeed, chID) => {\n  const item = localStorage.getItem('user');\n  if (!item) {\n    return;\n  }\n  const user = JSON.parse(item);\n  const bearerToken = user ? user.accessToken : '';\n  if (chID === '') {\n    return;\n  }\n  fetch(`/v0/message/${chID}`, {\n    method: 'get',\n    headers: new Headers({\n      'Authorization': `Bearer ${bearerToken}`,\n      'Content-Type': 'application/x-www-form-urlencoded',\n    }),\n  })\n    .then((response) => {\n      if (!response.ok) {\n        throw response;\n      }\n      return response.json();\n    })\n    .then((arr) => {\n      setChannelFeed(arr);\n    })\n    .catch((error) => {\n      console.log(error);\n      setChannelFeed([]);\n    });\n};\n\n/**\n * @return {object} JSX\n */\nfunction ChannelFeed() {\n  const classes = useStyles();\n\n  const {value3, value4} = React.useContext(WorkspaceContext);\n  const [messageDrawerOpen, setMessageDrawerOpen] = value3;\n  const [channelObj] = value4; // name, id.\n  const [channelFeed, setChannelFeed] = React.useState([]);\n\n  const handleDrawerClose = () => {\n    setMessageDrawerOpen(false);\n  };\n\n  const chID = channelObj.id;\n  console.log('chID: ', chID);\n\n  React.useEffect(() => {\n    fetchChannelFeed(setChannelFeed, chID);\n  }, [chID]);\n\n  console.log('channelFeed: ', channelFeed);\n\n  const ChannelMessages = () => {\n    const arr = [];\n    for (let i = 0; i < channelFeed.length; i++) {\n      const name = channelFeed[i]['name'];\n      const date = channelFeed[i]['date'];\n      const content = channelFeed[i]['content'];\n      const id = channelFeed[i]['id'];\n\n      const jsx =\n        <ListItem\n          key={id}\n          alignItems=\"flex-start\">\n          <ListItemAvatar>\n            <Avatar alt=\"Remy Sharp\"/>\n          </ListItemAvatar>\n          <ListItemText\n            primary={\n              <React.Fragment>\n                <Typography\n                  component=\"span\"\n                  variant=\"body2\"\n                  className={classes.inline}\n                  color=\"textPrimary\"\n                >{name}</Typography>\n                  &nbsp;&nbsp;{date}\n              </React.Fragment>\n            }\n            secondary={content}\n          />\n        </ListItem>;\n      arr.push(jsx);\n    }\n\n    return (\n      <List className={classes.posting}>\n        {arr}\n        <Divider variant=\"inset\" component=\"li\" />\n      </List>\n    );\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"right\"\n        open={messageDrawerOpen}\n        classes={{\n          paper: classes.drawerPaper,\n        }}>\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            <KeyboardArrowLeftIcon className={classes.icons}/>\n          </IconButton>\n          <Typography className={classes.title}>\n            {channelObj.name}\n          </Typography>\n        </div>\n        <Divider />\n        <Divider />\n        <ChannelMessages/>\n        {/* <SendText/> */}\n      </Drawer>\n    </div>\n  );\n}\n\nexport default ChannelFeed;\n"]},"metadata":{},"sourceType":"module"}
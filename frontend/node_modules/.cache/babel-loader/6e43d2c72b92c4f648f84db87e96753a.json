{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlim/Downloads/CSE183_Assignments/assignment-8/frontend/src/Homepage/SendText.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport SendIcon from '@material-ui/icons/Send'; // import Grid from '@material-ui/core/Grid';\n// import Typography from '@material-ui/core/Typography';\n// import ListItem from '@material-ui/core/ListItem';\n// import ListItemText from '@material-ui/core/ListItemText';\n// import ListItemAvatar from '@material-ui/core/ListItemAvatar';\n// import Avatar from '@material-ui/core/Avatar';\n// import {WorkspaceContext} from '../Homepage';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  text: {\n    '& > *': {\n      margin: theme.spacing(1)\n    },\n    'position': 'fixed',\n    'bottom': 60,\n    'width': '100%'\n  },\n  send: {\n    'position': 'fixed',\n    'bottom': 84,\n    'right': 15,\n    'zIndex': 1300\n  },\n  inline: {\n    display: 'block',\n    fontWeight: 'bold'\n  }\n}));\n/**\n * @return {any} jsx\n */\n\nfunction SendText() {\n  _s();\n\n  const classes = useStyles(); // const {value5} = React.useContext(WorkspaceContext);\n  // const [channelFeed, setChannelFeed] = value5;\n  // const item = localStorage.getItem('user');\n  // const user = JSON.parse(item);\n  // https://www.tutorialspoint.com/how-to-create-guid-uuid-in-javascript\n  // const createUUID = () => {\n  // return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){\n  //     const r = Math.random() * 16 | 0;\n  //     const v = (c === 'x') ? r : ((r & 0x3) | 0x8);\n  //     return v.toString(16);\n  //   });\n  // };\n\n  const sendMsg = content => {\n    console.log(content); // const msgList = channelFeed;\n    // const name = user.name;\n    // const d = new Date();\n    // const dict = {'name': user.name, 'date': d};\n    // const date = `${d.getHours()}:${d.getMinutes()}`;\n    // const id = createUUID();\n    // const newMsg =\n    //   <ListItem\n    //     button\n    //     key={id}\n    //     alignItems=\"flex-start\">\n    //     <ListItemAvatar>\n    //       <Avatar alt=\"Remy Sharp\"/>\n    //     </ListItemAvatar>\n    //     <ListItemText\n    //       primary={\n    //         <React.Fragment>\n    //           <Grid container justifyContent=\"space-between\">\n    //             <Typography\n    //               component=\"span\"\n    //               variant=\"body1\"\n    //               className={classes.inline}\n    //               color=\"textPrimary\"\n    //             >{name}</Typography>\n    //             <Typography\n    //               className={classes.inline}\n    //               color=\"textSecondary\"\n    //               align='right'>{date}\n    //             </Typography>\n    //           </Grid>\n    //         </React.Fragment>\n    //       }\n    //       secondary={\n    //         <React.Fragment>\n    //           <Typography\n    //             component=\"span\"\n    //             variant=\"body1\"\n    //             color=\"textPrimary\"\n    //           >{content}</Typography>\n    //         </React.Fragment>\n    //       }\n    //     />\n    //   </ListItem>;\n    // dict['content'] = newMsg;\n    // console.log(dict);\n    // msgList.push(dict);\n    // setChannelFeed(msgList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      className: classes.text,\n      id: \"outlined-basic\",\n      variant: \"outlined\",\n      placeholder: \"Send Message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SendIcon, {\n      className: classes.send,\n      onClick: sendMsg('Hello!')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SendText, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = SendText;\nexport default SendText;\n\nvar _c;\n\n$RefreshReg$(_c, \"SendText\");","map":{"version":3,"sources":["/Users/christopherlim/Downloads/CSE183_Assignments/assignment-8/frontend/src/Homepage/SendText.js"],"names":["React","makeStyles","TextField","SendIcon","useStyles","theme","text","margin","spacing","send","inline","display","fontWeight","SendText","classes","sendMsg","content","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,yBAArB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJ,aAAS;AACPC,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADD,KADL;AAIJ,gBAAY,OAJR;AAKJ,cAAU,EALN;AAMJ,aAAS;AANL,GADiC;AASvCC,EAAAA,IAAI,EAAE;AACJ,gBAAY,OADR;AAEJ,cAAU,EAFN;AAGJ,aAAS,EAHL;AAIJ,cAAU;AAJN,GATiC;AAevCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE,OADH;AAENC,IAAAA,UAAU,EAAE;AAFN;AAf+B,CAAZ,CAAD,CAA5B;AAqBA;AACA;AACA;;AACA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAMC,OAAO,GAAGV,SAAS,EAAzB,CADkB,CAGlB;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMW,OAAO,GAAIC,OAAD,IAAa;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ,EAD2B,CAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAjDD;;AAmDA,sBACE;AAAA,4BAEE,QAAC,SAAD;AACE,MAAA,SAAS,EAAEF,OAAO,CAACR,IADrB;AAEE,MAAA,EAAE,EAAC,gBAFL;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,YAFF,eASE,QAAC,QAAD;AACE,MAAA,SAAS,EAAEQ,OAAO,CAACL,IADrB;AAEE,MAAA,OAAO,EAAEM,OAAO,CAAC,QAAD;AAFlB;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GArFQF,Q;UACST,S;;;KADTS,Q;AAuFT,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport SendIcon from '@material-ui/icons/Send';\n// import Grid from '@material-ui/core/Grid';\n// import Typography from '@material-ui/core/Typography';\n// import ListItem from '@material-ui/core/ListItem';\n// import ListItemText from '@material-ui/core/ListItemText';\n// import ListItemAvatar from '@material-ui/core/ListItemAvatar';\n// import Avatar from '@material-ui/core/Avatar';\n// import {WorkspaceContext} from '../Homepage';\n\nconst useStyles = makeStyles((theme) => ({\n  text: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n    'position': 'fixed',\n    'bottom': 60,\n    'width': '100%',\n  },\n  send: {\n    'position': 'fixed',\n    'bottom': 84,\n    'right': 15,\n    'zIndex': 1300,\n  },\n  inline: {\n    display: 'block',\n    fontWeight: 'bold',\n  },\n}));\n\n/**\n * @return {any} jsx\n */\nfunction SendText() {\n  const classes = useStyles();\n\n  // const {value5} = React.useContext(WorkspaceContext);\n  // const [channelFeed, setChannelFeed] = value5;\n\n  // const item = localStorage.getItem('user');\n  // const user = JSON.parse(item);\n\n  // https://www.tutorialspoint.com/how-to-create-guid-uuid-in-javascript\n  // const createUUID = () => {\n  // return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){\n  //     const r = Math.random() * 16 | 0;\n  //     const v = (c === 'x') ? r : ((r & 0x3) | 0x8);\n  //     return v.toString(16);\n  //   });\n  // };\n\n  const sendMsg = (content) => {\n    console.log(content);\n    // const msgList = channelFeed;\n    // const name = user.name;\n    // const d = new Date();\n    // const dict = {'name': user.name, 'date': d};\n    // const date = `${d.getHours()}:${d.getMinutes()}`;\n    // const id = createUUID();\n    // const newMsg =\n    //   <ListItem\n    //     button\n    //     key={id}\n    //     alignItems=\"flex-start\">\n    //     <ListItemAvatar>\n    //       <Avatar alt=\"Remy Sharp\"/>\n    //     </ListItemAvatar>\n    //     <ListItemText\n    //       primary={\n    //         <React.Fragment>\n    //           <Grid container justifyContent=\"space-between\">\n    //             <Typography\n    //               component=\"span\"\n    //               variant=\"body1\"\n    //               className={classes.inline}\n    //               color=\"textPrimary\"\n    //             >{name}</Typography>\n    //             <Typography\n    //               className={classes.inline}\n    //               color=\"textSecondary\"\n    //               align='right'>{date}\n    //             </Typography>\n    //           </Grid>\n    //         </React.Fragment>\n    //       }\n    //       secondary={\n    //         <React.Fragment>\n    //           <Typography\n    //             component=\"span\"\n    //             variant=\"body1\"\n    //             color=\"textPrimary\"\n    //           >{content}</Typography>\n    //         </React.Fragment>\n    //       }\n    //     />\n    //   </ListItem>;\n    // dict['content'] = newMsg;\n    // console.log(dict);\n    // msgList.push(dict);\n    // setChannelFeed(msgList);\n  };\n\n  return (\n    <form>\n      {/* https://material-ui.com/components/text-fields/ */}\n      <TextField\n        className={classes.text}\n        id=\"outlined-basic\"\n        variant=\"outlined\"\n        placeholder=\"Send Message...\"\n      />\n      {/* https://material-ui.com/components/material-icons/ */}\n      <SendIcon\n        className={classes.send}\n        onClick={sendMsg('Hello!')}\n      />\n    </form>\n  );\n}\n\nexport default SendText;\n"]},"metadata":{},"sourceType":"module"}
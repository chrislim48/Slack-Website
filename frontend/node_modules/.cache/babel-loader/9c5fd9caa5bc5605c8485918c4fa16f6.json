{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlim/Downloads/CSE183_Assignments/assignment-8/frontend/src/Homepage/SendText.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport SendIcon from '@material-ui/icons/Send';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport { WorkspaceContext } from '../Homepage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  text: {\n    '& > *': {\n      margin: theme.spacing(1)\n    },\n    'position': 'fixed',\n    'bottom': 60,\n    'width': '100%'\n  },\n  send: {\n    'position': 'fixed',\n    'bottom': 84,\n    'right': 15,\n    'zIndex': 1300\n  }\n}));\n/**\n * @return {any} jsx\n */\n\nfunction SendText() {\n  _s();\n\n  const classes = useStyles();\n  const {\n    value5\n  } = React.useContext(WorkspaceContext);\n  const [channelFeed, setChannelFeed] = value5;\n  const item = localStorage.getItem('user');\n  const user = JSON.parse(item);\n\n  const sendMsg = content => {\n    const msgList = channelFeed;\n    const name = user.name;\n    const d = new Date();\n    const date = `${d.getHours()}:${d.getMinutes()}`;\n\n    const newMsg = /*#__PURE__*/_jsxDEV(ListItem, {\n      button: true,\n      alignItems: \"flex-start\",\n      children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          alt: \"Remy Sharp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justifyContent: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              component: \"span\",\n              variant: \"body1\",\n              className: classes.inline,\n              color: \"textPrimary\",\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.inline,\n              color: \"textSecondary\",\n              align: \"right\",\n              children: date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this),\n        secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"span\",\n            variant: \"body1\",\n            color: \"textPrimary\",\n            children: content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, d, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n\n    msgList.push(newMsg);\n    setChannelFeed(msgList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      className: classes.text,\n      id: \"outlined-basic\",\n      variant: \"outlined\",\n      placeholder: \"Send Message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SendIcon, {\n      className: classes.send,\n      onClick: sendMsg('Hello!')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SendText, \"GT5nN7tDQ5cbo3159Ywv1dtJlIw=\", false, function () {\n  return [useStyles];\n});\n\n_c = SendText;\nexport default SendText;\n\nvar _c;\n\n$RefreshReg$(_c, \"SendText\");","map":{"version":3,"sources":["/Users/christopherlim/Downloads/CSE183_Assignments/assignment-8/frontend/src/Homepage/SendText.js"],"names":["React","makeStyles","TextField","SendIcon","Grid","Typography","ListItem","ListItemText","ListItemAvatar","Avatar","WorkspaceContext","useStyles","theme","text","margin","spacing","send","SendText","classes","value5","useContext","channelFeed","setChannelFeed","item","localStorage","getItem","user","JSON","parse","sendMsg","content","msgList","name","d","Date","date","getHours","getMinutes","newMsg","inline","push"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,SAAQC,gBAAR,QAA+B,aAA/B;;AAEA,MAAMC,SAAS,GAAGV,UAAU,CAAEW,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJ,aAAS;AACPC,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADD,KADL;AAIJ,gBAAY,OAJR;AAKJ,cAAU,EALN;AAMJ,aAAS;AANL,GADiC;AASvCC,EAAAA,IAAI,EAAE;AACJ,gBAAY,OADR;AAEJ,cAAU,EAFN;AAGJ,aAAS,EAHL;AAIJ,cAAU;AAJN;AATiC,CAAZ,CAAD,CAA5B;AAiBA;AACA;AACA;;AACA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AAEA,QAAM;AAACQ,IAAAA;AAAD,MAAWnB,KAAK,CAACoB,UAAN,CAAiBV,gBAAjB,CAAjB;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCH,MAAtC;AAEA,QAAMI,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;AACA,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAb;;AAEA,QAAMM,OAAO,GAAIC,OAAD,IAAa;AAC3B,UAAMC,OAAO,GAAGV,WAAhB;AACA,UAAMW,IAAI,GAAGN,IAAI,CAACM,IAAlB;AACA,UAAMC,CAAC,GAAG,IAAIC,IAAJ,EAAV;AACA,UAAMC,IAAI,GAAI,GAAEF,CAAC,CAACG,QAAF,EAAa,IAAGH,CAAC,CAACI,UAAF,EAAe,EAA/C;;AACA,UAAMC,MAAM,gBACV,QAAC,QAAD;AACE,MAAA,MAAM,MADR;AAGE,MAAA,UAAU,EAAC,YAHb;AAAA,8BAIE,QAAC,cAAD;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,GAAG,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE,QAAC,YAAD;AACE,QAAA,OAAO,eACL,QAAC,KAAD,CAAO,QAAP;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,cAAc,EAAC,eAA/B;AAAA,oCACE,QAAC,UAAD;AACE,cAAA,SAAS,EAAC,MADZ;AAEE,cAAA,OAAO,EAAC,OAFV;AAGE,cAAA,SAAS,EAAEpB,OAAO,CAACqB,MAHrB;AAIE,cAAA,KAAK,EAAC,aAJR;AAAA,wBAKEP;AALF;AAAA;AAAA;AAAA;AAAA,oBADF,eAOE,QAAC,UAAD;AACE,cAAA,SAAS,EAAEd,OAAO,CAACqB,MADrB;AAEE,cAAA,KAAK,EAAC,eAFR;AAGE,cAAA,KAAK,EAAC,OAHR;AAAA,wBAGiBJ;AAHjB;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAkBE,QAAA,SAAS,eACP,QAAC,KAAD,CAAO,QAAP;AAAA,iCACE,QAAC,UAAD;AACE,YAAA,SAAS,EAAC,MADZ;AAEE,YAAA,OAAO,EAAC,OAFV;AAGE,YAAA,KAAK,EAAC,aAHR;AAAA,sBAIEL;AAJF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAnBJ;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA,OAEOG,CAFP;AAAA;AAAA;AAAA;AAAA,YADF;;AAqCAF,IAAAA,OAAO,CAACS,IAAR,CAAaF,MAAb;AACAhB,IAAAA,cAAc,CAACS,OAAD,CAAd;AACD,GA5CD;;AA8CA,sBACE;AAAA,4BAEE,QAAC,SAAD;AACE,MAAA,SAAS,EAAEb,OAAO,CAACL,IADrB;AAEE,MAAA,EAAE,EAAC,gBAFL;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,YAFF,eASE,QAAC,QAAD;AACE,MAAA,SAAS,EAAEK,OAAO,CAACF,IADrB;AAEE,MAAA,OAAO,EAAEa,OAAO,CAAC,QAAD;AAFlB;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAvEQZ,Q;UACSN,S;;;KADTM,Q;AAyET,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport SendIcon from '@material-ui/icons/Send';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport {WorkspaceContext} from '../Homepage';\n\nconst useStyles = makeStyles((theme) => ({\n  text: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n    'position': 'fixed',\n    'bottom': 60,\n    'width': '100%',\n  },\n  send: {\n    'position': 'fixed',\n    'bottom': 84,\n    'right': 15,\n    'zIndex': 1300,\n  },\n}));\n\n/**\n * @return {any} jsx\n */\nfunction SendText() {\n  const classes = useStyles();\n\n  const {value5} = React.useContext(WorkspaceContext);\n  const [channelFeed, setChannelFeed] = value5;\n\n  const item = localStorage.getItem('user');\n  const user = JSON.parse(item);\n\n  const sendMsg = (content) => {\n    const msgList = channelFeed;\n    const name = user.name;\n    const d = new Date();\n    const date = `${d.getHours()}:${d.getMinutes()}`;\n    const newMsg =\n      <ListItem\n        button\n        key={d}\n        alignItems=\"flex-start\">\n        <ListItemAvatar>\n          <Avatar alt=\"Remy Sharp\"/>\n        </ListItemAvatar>\n        <ListItemText\n          primary={\n            <React.Fragment>\n              <Grid container justifyContent=\"space-between\">\n                <Typography\n                  component=\"span\"\n                  variant=\"body1\"\n                  className={classes.inline}\n                  color=\"textPrimary\"\n                >{name}</Typography>\n                <Typography\n                  className={classes.inline}\n                  color=\"textSecondary\"\n                  align='right'>{date}\n                </Typography>\n              </Grid>\n            </React.Fragment>\n          }\n          secondary={\n            <React.Fragment>\n              <Typography\n                component=\"span\"\n                variant=\"body1\"\n                color=\"textPrimary\"\n              >{content}</Typography>\n            </React.Fragment>\n          }\n        />\n      </ListItem>;\n    msgList.push(newMsg);\n    setChannelFeed(msgList);\n  };\n\n  return (\n    <form>\n      {/* https://material-ui.com/components/text-fields/ */}\n      <TextField\n        className={classes.text}\n        id=\"outlined-basic\"\n        variant=\"outlined\"\n        placeholder=\"Send Message...\"\n      />\n      {/* https://material-ui.com/components/material-icons/ */}\n      <SendIcon\n        className={classes.send}\n        onClick={sendMsg('Hello!')}\n      />\n    </form>\n  );\n}\n\nexport default SendText;\n"]},"metadata":{},"sourceType":"module"}